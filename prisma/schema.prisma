// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransactionType {
  DEPOSIT
  WITHDRAWAL
}

enum TransactionStatus {
  PENDING
  COMPLETED
  FAILED
}

enum TokenType {
  TON
  USDT
  EARTH
}

model User {
  id         Int          @id @default(autoincrement())
  telegramId String       @unique
  username   String?
  firstName  String?
  lastName   String?
  wallets    Wallet[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  
  @@index([telegramId])
}

model Wallet {
  id           Int      @id @default(autoincrement())
  address      String   @unique
  publicKey    String
  privateKey   String   // Добавляем поле для приватного ключа
  balance      Float    @default(0)
  usdtBalance  Float    @default(0)
  earthBalance Float    @default(0)
  user         User     @relation(fields: [userId], references: [id])
  userId       Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([userId])
  @@index([address])
}

model Transaction {
  id        String           @id
  hash      String           @unique
  type      TransactionType
  amount    Float
  address   String
  status    TransactionStatus @default(PENDING)
  userId    Int
  fee       Float            @default(0)
  token     TokenType        @default(TON)
  timestamp DateTime         @default(now())
  error     String?         // Для хранения сообщений об ошибках
  
  @@index([userId])
  @@index([status])
  @@index([timestamp])
  @@index([hash])
}
